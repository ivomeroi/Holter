package com.example.anto.holterbluetoothinteligente;

import android.Manifest;
import android.app.AlarmManager;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.app.Service;
import android.bluetooth.BluetoothAdapter;
import android.bluetooth.BluetoothDevice;
import android.bluetooth.BluetoothHeadset;
import android.bluetooth.BluetoothSocket;
import android.content.BroadcastReceiver;
import android.content.ComponentName;
import android.content.ContentResolver;
import android.content.Context;
import android.content.Intent;
import android.content.IntentFilter;
import android.content.IntentSender;
import android.content.ServiceConnection;
import android.content.SharedPreferences;
import android.content.pm.ApplicationInfo;
import android.content.pm.PackageManager;
import android.content.res.AssetManager;
import android.content.res.Configuration;
import android.content.res.Resources;
import android.database.DatabaseErrorHandler;
import android.database.sqlite.SQLiteDatabase;
import android.graphics.Bitmap;
import android.graphics.drawable.Drawable;
import android.media.RingtoneManager;
import android.net.Uri;
import android.os.AsyncTask;
import android.os.Bundle;
import android.os.Handler;
import android.os.IBinder;
import android.os.Looper;
import android.os.UserHandle;
import android.preference.PreferenceManager;

import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.app.ActivityCompat;
import androidx.core.app.NotificationCompat;
import androidx.core.content.ContextCompat;

import android.telephony.SmsManager;
import android.view.Display;
import android.widget.Toast;

import com.creativityapps.gmailbackgroundlibrary.BackgroundMail;
import com.google.android.gms.common.api.GoogleApiClient;
import com.google.android.gms.location.ActivityRecognition;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.lang.reflect.InvocationTargetException;
import java.lang.reflect.Method;
import java.nio.charset.Charset;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Calendar;
import java.util.Collections;
import java.util.List;
import java.util.Set;
import java.util.UUID;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
//TODO
import java.util.stream.Collectors;

public class analisisecg extends Service
        implements GoogleApiClient.ConnectionCallbacks {

    Handler handler = new Handler();
    BluetoothAdapter btadapter = BluetoothAdapter.getDefaultAdapter();
    BluetoothDevice device;
    static BluetoothSocket btsocket;
    static InputStream instream;
    boolean encontrado = false;
    static boolean servicioactivo = false;
    boolean taquiant = false;
    boolean bradiant = false;
    static int tama単oentrada = 13, tama単ocapaoculta = 44, tama単osalida = 4;
    ArrayList<Double> se単alf2 = new ArrayList<>();
    ArrayList<Integer> qrs = new ArrayList<>(), qrssintomas = new ArrayList<>();
    ArrayList<String> clases = new ArrayList<>(), sintomas = new ArrayList<>(), actividades = new ArrayList<>();
    int alertas = 0, fcmax = 0, fcmin = 500, fcmaxhora = 0, fcminhora = 500, sum1 = 0, sum2 = 0, horas = 0, intervalos = 0, minutosant = 0, latidosant = 1, normalant = 0, supraant = 0, ventriant = 0, marcaant = 0, bradicardia = 0, taquicardia = 0, pausas = 0, latidos = 0, normal = 0, ventri = 0, supra = 0, marcapasos = 0, contventri = 0, contsupra = 0, aisladasventri = 0, aisladassupra = 0, duplasventri = 0, duplassupra = 0, tripletesventri = 0, tripletessupra = 0, corridasventri = 0, corridassupra = 0;
    SharedPreferences sharedPreferences;
    SharedPreferences.Editor editor;
    AlarmManager alarmMgr;
    PendingIntent alarmIntent1;
    PendingIntent alarmIntent2;
    String actividad;
    GoogleApiClient googleApiClient;

    static Double[] media1 = {0.0046754166666667, 0.0054929166666667, 0.0064056250000000, 0.0073439583333333, 0.0082077083333333, 0.0089520833333333, 0.0096818749999999, 0.0103699999999999, 0.0110170833333332, 0.0117172916666666, 0.0124635416666665, 0.0132185416666666, 0.0140052083333332, 0.0148424999999999, 0.0156156249999999, 0.0163091666666666, 0.0168387499999998, 0.0171043750000000, 0.0171210416666665, 0.0169706249999998, 0.0167195833333332, 0.0165052083333332, 0.0164829166666665, 0.0166293749999998, 0.0169558333333333, 0.0174097916666665, 0.0178322916666666, 0.0182127083333331, 0.0185604166666665, 0.0189031249999998, 0.0192291666666665, 0.0196160416666664, 0.0200106249999998, 0.0204249999999999, 0.0209106249999998, 0.0214549999999999, 0.0220056249999998, 0.0224497916666664, 0.0226558333333333, 0.0224068749999998, 0.0217056249999999, 0.0206470833333332, 0.0193481249999998, 0.0177783333333331, 0.0160652083333332, 0.0142429166666665, 0.0122358333333333, 0.0101127083333333, 0.0081227083333333, 0.0062460416666666, 0.0045308333333333, 0.0030610416666667, 0.0018731250000000, 0.0009122916666667, 0.0001704166666667, -0.0002847916666667, -0.0004250000000000, -0.0002631250000000, 0.0002297916666667, 0.0011939583333333, 0.0026135416666667, 0.0045127083333333, 0.0069479166666667, 0.0100437500000000, 0.0138608333333333, 0.0185556249999999, 0.0241404166666666, 0.0305925000000000, 0.0378656250000000, 0.0458464583333334, 0.0545891666666666, 0.0643587500000000, 0.0754110416666666, 0.0880968749999999, 0.1028718749999999, 0.1202981249999999, 0.1414562499999994, 0.1677004166666659, 0.1997141666666658, 0.2370597916666664, 0.2789054166666669, 0.3261537499999997, 0.3817868749999998, 0.4493302083333330, 0.5311656250000009, 0.6283050000000012, 0.7364668749999984, 0.8431612500000013, 0.9332560416666657, 0.9946727083333341, 1.0174283333333363, 0.9940960416666640, 0.9244910416666651, 0.8149922916666660, 0.6755100000000015, 0.5200122916666661, 0.3662870833333329, 0.2309902083333333, 0.1241689583333334, 0.0487335416666666, 0.0008649999999997, -0.0279064583333332, -0.0467420833333334, -0.0621481250000000, -0.0780116666666670, -0.0957522916666668, -0.1153241666666665, -0.1359270833333337, -0.1567383333333334, -0.1768993749999997, -0.1961200000000001, -0.2143741666666667, -0.2318681249999999, -0.2487131250000005, -0.2644881250000002, -0.2787097916666668, -0.2906618749999997, -0.2997181250000002, -0.3055481249999995, -0.3083147916666668, -0.3082660416666671, -0.3060410416666676, -0.3024004166666661, -0.2978931249999994, -0.2930612500000006, -0.2881535416666665, -0.2829837499999998, -0.2770706250000003, -0.2698889583333335, -0.2608106249999999, -0.2494914583333329, -0.2360783333333333, -0.2209679166666664, -0.2048550000000003, -0.1885679166666666, -0.1728887500000002, -0.1583775000000003, -0.1452847916666668, -0.1337487499999998, -0.1237114583333335, -0.1149502083333336, -0.1071472916666667, -0.1002308333333337, -0.0938989583333334, -0.0878068750000001, -0.0817650000000001, -0.0756685416666667, -0.0694331250000000, -0.0629502083333335, -0.0562410416666667, -0.0494035416666667, -0.0425037500000001, -0.0355395833333333, -0.0285008333333333, -0.0214249999999999, -0.0142845833333333, -0.0070172916666667, 0.0003329166666667, 0.0077352083333333, 0.0151058333333333, 0.0224662500000000, 0.0297256250000000, 0.0368629166666667, 0.0436868750000000, 0.0500806250000000, 0.0560747916666667, 0.0617552083333333, 0.0671610416666665, 0.0723918750000000, 0.0775004166666667, 0.0825206249999999, 0.0874320833333333, 0.0923270833333332, 0.0972633333333335, 0.1023402083333334, 0.1075137500000000, 0.1128033333333333, 0.1181308333333334, 0.1234897916666664, 0.1289489583333333, 0.1344883333333331};
    static Double[] stddev1 = {0.1651202396441676, 0.1643853350981330, 0.1634960767975124, 0.1624677563501986, 0.1612839359786008, 0.1600040040257275, 0.1586122598456801, 0.1571694090670603, 0.1556774470303639, 0.1540721716699648, 0.1522226626790130, 0.1501140024861199, 0.1477922073148182, 0.1454259631513268, 0.1431760681924451, 0.1410971515207056, 0.1391344101164551, 0.1371819561121350, 0.1352773852787907, 0.1334085569322576, 0.1317110903727775, 0.1301181631298454, 0.1285498554910651, 0.1269834277647511, 0.1254647410944653, 0.1240670144551163, 0.1228399616463850, 0.1216740286534417, 0.1205287255291272, 0.1192751043663057, 0.1180084883246250, 0.1168181812442784, 0.1157904553922059, 0.1148199483798302, 0.1138925372227409, 0.1129565840912350, 0.1120131556588754, 0.1110887451255055, 0.1101996440161831, 0.1093594644829575, 0.1085104330258546, 0.1075677083002403, 0.1064202876185790, 0.1050915695800801, 0.1035989134079228, 0.1019506934575315, 0.1001659396661118, 0.0984408924114824, 0.0970019459666415, 0.0959691318635207, 0.0953394407778879, 0.0951690231659806, 0.0955073637973186, 0.0962280710045608, 0.0971645206415794, 0.0982567640604992, 0.0995303673236836, 0.1011264505789370, 0.1031611903881019, 0.1057786205767369, 0.1090093890897915, 0.1131454826070414, 0.1186286728806141, 0.1257145285915674, 0.1345936697469802, 0.1452597053054972, 0.1575705237803128, 0.1712005223833923, 0.1860417907106802, 0.2017974397170288, 0.2183646610612380, 0.2358885664038290, 0.2547165019320287, 0.2750633547484427, 0.2970446296838051, 0.3205977552764444, 0.3458858734738149, 0.3742598127211070, 0.4086708500585438, 0.4517306236381661, 0.5023973519035107, 0.5577886570942613, 0.6181127786759967, 0.6880286705313804, 0.7688199753359304, 0.8517884698138220, 0.9247644997638987, 0.9814842056419821, 1.0215585178754074, 1.0477538323040838, 1.0615811161710718, 1.0600451816738747, 1.0383265377934980, 0.9966103000509768, 0.9435101261245724, 0.8921652223498612, 0.8512516732497478, 0.8202621670034350, 0.7942065057271159, 0.7685913788802609, 0.7420849971902168, 0.7165826138174586, 0.6942267508231619, 0.6751407869791194, 0.6582094956975588, 0.6425032420298905, 0.6277520261156343, 0.6138743930713145, 0.6004985230732048, 0.5872929573858199, 0.5740706620278060, 0.5608913503492237, 0.5479755029262506, 0.5355688626707649, 0.5236987575791655, 0.5122492667253269, 0.5012797363576070, 0.4912060258059812, 0.4825686832413013, 0.4760189871532437, 0.4723979539478351, 0.4722441823981265, 0.4758480919644495, 0.4830510990346937, 0.4929783868830765, 0.5037993734382407, 0.5132489428487721, 0.5189337259528053, 0.5187250342337633, 0.5113654742261067, 0.4966568436535889, 0.4756004262841839, 0.4502305827380753, 0.4231200469070249, 0.3966581051714972, 0.3728477543516769, 0.3529161036239694, 0.3371954040409095, 0.3255442014341745, 0.3174008173983500, 0.3121917929519252, 0.3092429634322157, 0.3080642153693561, 0.3080972945413287, 0.3089995053486587, 0.3103386292237852, 0.3118099284424131, 0.3131309601998816, 0.3142596432566991, 0.3152503274131672, 0.3162028000187450, 0.3172788467969742, 0.3186674917558612, 0.3204818034950924, 0.3227460650491171, 0.3255727212851252, 0.3288675491458254, 0.3325420838770871, 0.3365766375962180, 0.3407789259283489, 0.3450427700075851, 0.3493348520423534, 0.3535534547763344, 0.3575742620206052, 0.3613778613851961, 0.3648440469708721, 0.3678792489027390, 0.3705053172990416, 0.3725780366459358, 0.3741357478568079, 0.3753434712254441, 0.3763242777792645, 0.3771873541919994, 0.3780340562519765, 0.3789599225904157, 0.3799346137284727, 0.3809288995264190, 0.3819027885624663, 0.3828658124727886, 0.3837577525024186, 0.3846288673059370};
    static Double[] media2 = {251.3522916666666700, 303.4566666666666500, 284.7974791666664500};
    static Double[] stddev2 = {71.2953602732851410, 116.5529632648398600, 61.7290791799038560};

    static Double[][] pca = {{-0.0222861227808395, -0.0230772906060537, -0.0236676113917987, -0.0241152272714701, -0.0245121669164236, -0.0249195148225530, -0.0254059317202521, -0.0259218604694928, -0.0263963184209698, -0.0267327256619469, -0.0269512011191986, -0.0269918918563412, -0.0268363019185272, -0.0265272123527238, -0.0260086437730489, -0.0253339019673244, -0.0245173142077012, -0.0237271260234233, -0.0228422666181086, -0.0220021965555430, -0.0210904033219464, -0.0201955022951024, -0.0191409917855833, -0.0180243727461184, -0.0167674134254564, -0.0153449494123667, -0.0138128266362495, -0.0123110147288165, -0.0109075820546025, -0.0096140001578043, -0.0084023100753275, -0.0071941031121305, -0.0059317407067183, -0.0046417390209828, -0.0034285376074694, -0.0023671660079392, -0.0014276432739474, -0.0006406564834089, -0.0000388891986647, 0.0004796434919012, 0.0008090277833309, 0.0009102141101382, 0.0006622105513458, 0.0002766844350037, -0.0003015916405382, -0.0009509877598263, -0.0016927206442826, -0.0025400284807834, -0.0035790835395666, -0.0046803035649066, -0.0059204838240152, -0.0071783517743377, -0.0084202190365173, -0.0097170993434824, -0.0112442713941125, -0.0128900546590633, -0.0145951989289938, -0.0161779654158150, -0.0175860439253152, -0.0188580359928564, -0.0202698796096599, -0.0219295820007963, -0.0238868238899661, -0.0260942671831922, -0.0282847240061232, -0.0302502440217005, -0.0320352716082375, -0.0336584620978507, -0.0351195526043298, -0.0366341440143111, -0.0382765392857910, -0.0401448748744444, -0.0423829979245834, -0.0451276552622654, -0.0484718320823150, -0.0524394516177497, -0.0569266356031852, -0.0616754645425420, -0.0664264344593993, -0.0713320519971977, -0.0773436141194312, -0.0852955419406733, -0.0945847793690225, -0.1031016100557892, -0.1088706419306493, -0.1116741899051787, -0.1123570880178108, -0.1116088371058978, -0.1098947179810003, -0.1077625046114312, -0.1060278200119778, -0.1056220391120636, -0.1072566687078866, -0.1109905444465018, -0.1159130405137420, -0.1201245099129441, -0.1217646556271324, -0.1203663001402419, -0.1167978313754504, -0.1122487144029922, -0.1075304499903606, -0.1029139826339980, -0.0983763447377047, -0.0938474512664552, -0.0892211830770410, -0.0843450563184890, -0.0790308918642401, -0.0731465685876777, -0.0666154513091138, -0.0594142099221047, -0.0515724118977048, -0.0431558224813156, -0.0343050732438929, -0.0252848843903639, -0.0163927356753003, -0.0078548975145841, 0.0002460118249715, 0.0079343109354132, 0.0152938745434396, 0.0224330248728275, 0.0293507747800704, 0.0359388106528700, 0.0420101487686338, 0.0474083712127129, 0.0520445534679385, 0.0559908297620052, 0.0594458192456306, 0.0626366606764422, 0.0657640012700556, 0.0690017691648860, 0.0724906651412902, 0.0763321618418226, 0.0805831749946680, 0.0852286025609179, 0.0901668283355965, 0.0952129546602096, 0.1001202135404545, 0.1046755412576915, 0.1087242672814029, 0.1122178887229772, 0.1151588945300427, 0.1175927767573772, 0.1195990692526138, 0.1212849788377720, 0.1227312097090786, 0.1239916276827955, 0.1250955555738469, 0.1260501259142697, 0.1268474662743935, 0.1274394059357086, 0.1277938962038782, 0.1278925017144542, 0.1277195870263252, 0.1272527540148584, 0.1265086678169739, 0.1254812792127662, 0.1241823802946128, 0.1226396840812874, 0.1208818530331281, 0.1189608384409589, 0.1169224373013413, 0.1148354880794279, 0.1127576118747218, 0.1107326142133915, 0.1087929578886581, 0.1069591093996004, 0.1052275579719353, 0.1035727865314194, 0.1019962293787206, 0.1004368914262646, 0.0988673708957462, 0.0972329131846727, 0.0955090375064155, 0.0936568868151627, 0.0916807484531564, 0.0895696389122406, 0.0873405769458848, 0.0849744502811309, 0.0824897123287828, 0.0798882437960229, 0.0771675544250910},
            {-0.1021132259015481, -0.1041456634985923, -0.1061613335120081, -0.1080845726082167, -0.1098338074170402, -0.1113836478487534, -0.1127697301421098, -0.1140306305727713, -0.1151065635508060, -0.1160428459383913, -0.1169150138728742, -0.1176145590114561, -0.1181842928504984, -0.1185899126532045, -0.1187319418258547, -0.1184346150469492, -0.1177716494864589, -0.1166481042278824, -0.1150562058957284, -0.1130201776806468, -0.1105010481958951, -0.1076042459741963, -0.1042551002892735, -0.1005971956426857, -0.0965466272639267, -0.0921901275609800, -0.0875646351362985, -0.0827618025059261, -0.0775522455137295, -0.0720132700510479, -0.0660758454147251, -0.0597930669972693, -0.0533562625354544, -0.0468766042666045, -0.0403433064769173, -0.0336941382857414, -0.0268766510325958, -0.0198657717693293, -0.0128023111578917, -0.0056626625231181, 0.0016545098853550, 0.0093277177362844, 0.0171884491059312, 0.0252834721089832, 0.0334326016520989, 0.0414076624123622, 0.0491685387032356, 0.0567513576848847, 0.0639134677388286, 0.0704378601042413, 0.0763720750187086, 0.0817118164054634, 0.0864355617252598, 0.0906671800073569, 0.0944215342518312, 0.0976237681854961, 0.1000967124122802, 0.1018930821617858, 0.1029893651305245, 0.1037469644094942, 0.1043916878340210, 0.1049335543753173, 0.1050552519491648, 0.1046693265672267, 0.1036539686722765, 0.1020877909241481, 0.0999877090647891, 0.0975821282396820, 0.0949261532876817, 0.0921032642570312, 0.0890787159686295, 0.0858659796143157, 0.0823245398853170, 0.0784701682345352, 0.0743765609691265, 0.0703177242675740, 0.0667085561644784, 0.0636250088580814, 0.0606686179910459, 0.0572190792898670, 0.0532784112189458, 0.0495564400806848, 0.0466240113642302, 0.0441364665620533, 0.0411809086034659, 0.0370536623190132, 0.0314391317729759, 0.0243652935734791, 0.0163893828028818, 0.0087248409355411, 0.0027794169850147, -0.0006259615579786, -0.0015916900171148, -0.0007240818879507, 0.0013559894606305, 0.0039139118690204, 0.0058352696304312, 0.0060180532193323, 0.0038453286000049, -0.0008510825971915, -0.0078330528211867, -0.0163786445380263, -0.0255244153698172, -0.0345229827665312, -0.0430445704853286, -0.0509271103685078, -0.0581439757469467, -0.0647399385833838, -0.0707769057289207, -0.0762494925472599, -0.0811333109641803, -0.0854374932232407, -0.0891146341781757, -0.0921866593522285, -0.0947788111068617, -0.0970399212375247, -0.0989741777749131, -0.1005327545889596, -0.1016285655723290, -0.1021554332979298, -0.1021402005533667, -0.1016067764338021, -0.1006157325692843, -0.0992414671207596, -0.0976002081533745, -0.0957472627623033, -0.0938030014213346, -0.0918118576783000, -0.0897536745809517, -0.0875719516653521, -0.0851582055521478, -0.0824173952932233, -0.0793103312180947, -0.0758110910766901, -0.0719216670845928, -0.0677313193935241, -0.0633382599577277, -0.0588499783462244, -0.0544561691519092, -0.0501934498905250, -0.0461304869114906, -0.0422889096028637, -0.0386678575765742, -0.0351289965006783, -0.0316735359033080, -0.0281999712333762, -0.0246400544859417, -0.0208889464472440, -0.0168566090502525, -0.0125347293024883, -0.0080021538407224, -0.0033480763807668, 0.0013411114231298, 0.0059539387639794, 0.0105135204677249, 0.0150682076603848, 0.0196500285664568, 0.0241888111272066, 0.0286542031026948, 0.0329831736504691, 0.0371342370740536, 0.0410770189759192, 0.0447443583010607, 0.0481106151823951, 0.0511558197762192, 0.0539178984374804, 0.0564315377856951, 0.0588095647867762, 0.0610731605893913, 0.0632649320796067, 0.0654122613985670, 0.0674867845290904, 0.0694881013763878, 0.0714684645572520, 0.0734545937916885, 0.0754004156821166, 0.0772705518132403, 0.0790883768127633, 0.0808295133105554, 0.0824979258422046, 0.0840769768052141},
            {-0.0490744436795747, -0.0526870646140759, -0.0562908853135749, -0.0598020291067427, -0.0633400231541578, -0.0668510035621322, -0.0704178621012534, -0.0740857530556393, -0.0778175142325352, -0.0816186534445937, -0.0853369350226501, -0.0890846062403069, -0.0928465217702829, -0.0965843848888796, -0.1002540477280020, -0.1039183418637134, -0.1074976461118605, -0.1110801030136504, -0.1147968726254625, -0.1185220233977317, -0.1221320047532467, -0.1255526470679549, -0.1288387154607006, -0.1318009572775261, -0.1343900627163513, -0.1365394228237810, -0.1382326749381702, -0.1394638178653682, -0.1403517917072594, -0.1410168468069449, -0.1413842976970983, -0.1414263714310534, -0.1410652432147742, -0.1402322611464936, -0.1388788115693567, -0.1370608487380271, -0.1347880966887539, -0.1320361813545355, -0.1288448102742029, -0.1252901378873369, -0.1214449272991294, -0.1173272422684869, -0.1131529176004836, -0.1088941712450120, -0.1043603018833195, -0.0994356834929655, -0.0939981649862875, -0.0878835988456406, -0.0811784488928741, -0.0741747398125140, -0.0668762033500974, -0.0594336242930415, -0.0519335713387500, -0.0444736195683062, -0.0371881612274200, -0.0302125022325280, -0.0235211367095487, -0.0171576362375721, -0.0109091319710537, -0.0049298878200557, 0.0008327335321821, 0.0061830154377544, 0.0112986005865603, 0.0160734139693602, 0.0204998318517069, 0.0243882540059052, 0.0278683958921449, 0.0308561064601013, 0.0333252825967840, 0.0355345421295609, 0.0376460949263478, 0.0397610828642991, 0.0418795241798283, 0.0438992796817453, 0.0454366474283014, 0.0459590740408168, 0.0446849525321932, 0.0407766159844366, 0.0338800705725122, 0.0246401977160268, 0.0143117588604452, 0.0036143967641042, -0.0071827655747147, -0.0173600573308884, -0.0254310114801109, -0.0302991721254747, -0.0319558506683364, -0.0311322519418394, -0.0288612309900200, -0.0261864393677156, -0.0239127032568186, -0.0222604238723463, -0.0207269204928289, -0.0184216939988100, -0.0147084741430821, -0.0096060445096725, -0.0037191315691151, 0.0021831893457919, 0.0077733975604640, 0.0131287122351846, 0.0183382809929436, 0.0234899121968189, 0.0287598604104698, 0.0342571860533456, 0.0400505956410234, 0.0462772503869887, 0.0529857011634112, 0.0600836268255767, 0.0673140027551089, 0.0743619986899023, 0.0809367829485467, 0.0867364903654320, 0.0914499648427426, 0.0949469065886837, 0.0972106328312624, 0.0983447692250859, 0.0985802605201907, 0.0982384874457613, 0.0975074326562574, 0.0965642381643296, 0.0955003789931976, 0.0943383166499802, 0.0930169699420359, 0.0915606353509741, 0.0899801525856607, 0.0883422908507587, 0.0866512139703851, 0.0849319677238572, 0.0831465808450581, 0.0812639179983501, 0.0792085140848782, 0.0769371240427881, 0.0743431970028099, 0.0713917704583849, 0.0680532340232298, 0.0643214302069257, 0.0602704826124261, 0.0560080826747834, 0.0515645531668876, 0.0469698076253251, 0.0423037406480804, 0.0376133437160181, 0.0330307531971475, 0.0286115917761033, 0.0243296140124058, 0.0201229096716102, 0.0158990680002433, 0.0115634379116978, 0.0071175830585593, 0.0025496968994544, -0.0020982129050273, -0.0067815741659467, -0.0114532726174153, -0.0161299041013218, -0.0206934396587695, -0.0250917779682065, -0.0293172776984617, -0.0333871668655286, -0.0372742204036639, -0.0409773189531622, -0.0445141412727774, -0.0478029936584267, -0.0508409559059127, -0.0536351054473499, -0.0561740398601575, -0.0584580202916559, -0.0605403096452237, -0.0624207303269961, -0.0640781402530076, -0.0655756723017554, -0.0669161968868966, -0.0681548591547310, -0.0693444188833479, -0.0705315229323351, -0.0716853795186867, -0.0728566380834865, -0.0739900956308664, -0.0750241553463853, -0.0759592354250917, -0.0768454413374762, -0.0776965053570261},
            {-0.0722328536611002, -0.0697631323367085, -0.0670121587504347, -0.0640681708620803, -0.0609917625767698, -0.0576749045347184, -0.0542263954490047, -0.0505078495646316, -0.0465807937823173, -0.0423838547477303, -0.0379802009392732, -0.0332320999130434, -0.0282627121144290, -0.0229509620827854, -0.0173217961279044, -0.0114128264104521, -0.0052611609831075, 0.0010019917338831, 0.0073691288144672, 0.0137502316121526, 0.0201185007588439, 0.0265167675344823, 0.0332083478787389, 0.0401113202052942, 0.0472807134879431, 0.0544891875246655, 0.0614803950197334, 0.0681696867349494, 0.0745780971231757, 0.0806787351310407, 0.0865332737244931, 0.0921278565044787, 0.0973236408121423, 0.1022253129581489, 0.1068073741792281, 0.1111576313021793, 0.1151297098309506, 0.1188323174001823, 0.1221375125181400, 0.1249994047723531, 0.1275126038226073, 0.1299376018827003, 0.1322291005627359, 0.1344990223392668, 0.1368234276151598, 0.1390730170039869, 0.1412525461491238, 0.1431890713892973, 0.1445681837712455, 0.1450771701797056, 0.1447309163282534, 0.1435689996055397, 0.1415478069063604, 0.1389088285476827, 0.1360137458631276, 0.1329952293746154, 0.1298352039159458, 0.1264771505660610, 0.1230137627546945, 0.1195175870961886, 0.1161866538366411, 0.1131429259249009, 0.1103354417485257, 0.1075820464132168, 0.1047241376916152, 0.1017942614223826, 0.0986108157467027, 0.0950929652197651, 0.0914285111238958, 0.0875991480566671, 0.0835311429133827, 0.0791186682031500, 0.0743233352598022, 0.0689705908776338, 0.0630377727841544, 0.0562033769628254, 0.0479054939514797, 0.0375140718664553, 0.0250804341918922, 0.0118086487819530, -0.0007319958632595, -0.0119993079870592, -0.0220150597966850, -0.0302743463840226, -0.0357339536500844, -0.0380482348932089, -0.0375007992881719, -0.0343832675598673, -0.0292955257765227, -0.0234893498734498, -0.0183866767260556, -0.0150067669760084, -0.0138862083189737, -0.0151227561986025, -0.0184718457123303, -0.0233773211170746, -0.0287374592083985, -0.0331826806133905, -0.0356918015526535, -0.0357426707566393, -0.0331260696544132, -0.0280210162875912, -0.0210285593343660, -0.0128513529949093, -0.0040791850736033, 0.0049503625732120, 0.0141279415208948, 0.0234418232507261, 0.0328780326531234, 0.0423362034032381, 0.0516690859942845, 0.0606677597484836, 0.0690958629590530, 0.0766928638687328, 0.0832881959166696, 0.0888228881457587, 0.0933282829429599, 0.0968515909880228, 0.0994608825644495, 0.1012634270723739, 0.1022473712161693, 0.1024427374284267, 0.1019225481314768, 0.1007869066044514, 0.0992218919526429, 0.0974377254993900, 0.0955616450442936, 0.0935722560766455, 0.0914379572542087, 0.0890320033918568, 0.0862972478657312, 0.0831129741677063, 0.0794638518523239, 0.0753301670179773, 0.0707433742265163, 0.0657603370285949, 0.0605595165268438, 0.0552521825098706, 0.0500417421093624, 0.0450542146885600, 0.0403555971823997, 0.0359938752986072, 0.0319804208869433, 0.0282125632597913, 0.0245978886047092, 0.0210421208223636, 0.0174541537015741, 0.0138184211710205, 0.0101272820024596, 0.0064039785431032, 0.0026778391242260, -0.0010424218056871, -0.0047627142436954, -0.0084479910051517, -0.0120988746646959, -0.0157337416040467, -0.0193502203382380, -0.0229264298129164, -0.0264387499113128, -0.0298181372570205, -0.0330100612649566, -0.0359182827571908, -0.0385415638881647, -0.0409081263974432, -0.0430798551420222, -0.0450792678568072, -0.0469182138678893, -0.0486258713334570, -0.0502537878497990, -0.0518666152552626, -0.0534628885273384, -0.0551208511501422, -0.0567754576163653, -0.0584367316319292, -0.0600488235763719, -0.0616070126943156, -0.0631316134615296, -0.0646839456777526, -0.0662472065816160, -0.0678057379430062, -0.0693923614891065},
            {-0.0999237149666209, -0.1019864186464963, -0.1039814166040532, -0.1058810972320629, -0.1074192817068453, -0.1086144264769996, -0.1092740822701396, -0.1094468043806299, -0.1091707736211676, -0.1083775554885323, -0.1069499951783011, -0.1050518465527218, -0.1025704120279616, -0.0994502111550092, -0.0959236773881429, -0.0919853500895038, -0.0875513782221653, -0.0826407879955104, -0.0770322527937952, -0.0706575224792462, -0.0639200573717405, -0.0568341415319035, -0.0493222657207280, -0.0414260666053056, -0.0332050339173422, -0.0246154214295232, -0.0159836790984711, -0.0075566004515122, 0.0007552340801991, 0.0088703439610581, 0.0169342143625687, 0.0248369004742921, 0.0323902878199723, 0.0392951611111603, 0.0455460984494299, 0.0512522371221474, 0.0565857436852465, 0.0615054852753760, 0.0657580904270633, 0.0693723910372101, 0.0719630955562070, 0.0734913959200114, 0.0739652706526975, 0.0733451608173761, 0.0714234047253669, 0.0684620347502409, 0.0645069249894762, 0.0597330108695729, 0.0544002482143594, 0.0485039683841328, 0.0419595310034454, 0.0346454886687699, 0.0266149449216044, 0.0183062672130186, 0.0098467081137826, 0.0013295477739022, -0.0072322209911945, -0.0160211504066734, -0.0254660704388310, -0.0356894956507020, -0.0467867264823057, -0.0589332662699343, -0.0720136093141026, -0.0855331865389255, -0.0987130295070405, -0.1106265725600413, -0.1208546437447653, -0.1292044365254352, -0.1358978301790042, -0.1412133410029571, -0.1457430199203638, -0.1495838325702683, -0.1529840984099008, -0.1561922867276324, -0.1594828874784198, -0.1631678584356784, -0.1674551312396633, -0.1716584427888742, -0.1732749173849029, -0.1690780819576908, -0.1569070058405390, -0.1361631397793527, -0.1074103367879132, -0.0733223450702255, -0.0391383541084934, -0.0097661340200818, 0.0129748434701663, 0.0290459217592117, 0.0390052299012392, 0.0439001069099005, 0.0450743647883398, 0.0436959964258495, 0.0411876134738199, 0.0391446868989095, 0.0388251037803023, 0.0408775027330273, 0.0457043638553715, 0.0534468859631120, 0.0635865088633514, 0.0750898503204367, 0.0868152410950042, 0.0974164838904502, 0.1058353648821707, 0.1117636180793171, 0.1155695439441680, 0.1176813041921894, 0.1185059989387527, 0.1183043556264287, 0.1173232412790823, 0.1156334318404981, 0.1130871165897012, 0.1094006396192145, 0.1043126715580166, 0.0976498445903540, 0.0894740117829765, 0.0800380979010270, 0.0696584256146621, 0.0585323196695186, 0.0468009043454364, 0.0345092241335669, 0.0218701352325590, 0.0092937983730497, -0.0026708459451896, -0.0134649146758893, -0.0226811125010586, -0.0302534682370545, -0.0363003726043891, -0.0410741706294009, -0.0447676398922673, -0.0474921970821888, -0.0492734871234074, -0.0502106145459103, -0.0503461059857543, -0.0498084932390294, -0.0487703287877171, -0.0474641573441895, -0.0460390073242051, -0.0446154745186725, -0.0431006481766494, -0.0415263052999802, -0.0398770909498643, -0.0381280254190821, -0.0362431179130129, -0.0343659267921436, -0.0324220300286522, -0.0303531212108079, -0.0280743197003521, -0.0254616424564616, -0.0223711595498265, -0.0188291780134407, -0.0149580661306549, -0.0108625363601352, -0.0067233346948264, -0.0027204916033661, 0.0011220208132160, 0.0048662499825909, 0.0084545779211619, 0.0118623125883241, 0.0151351149699964, 0.0181627402043480, 0.0208900736646850, 0.0233619919985071, 0.0254437367723741, 0.0271165843612879, 0.0282947862678831, 0.0290480992492624, 0.0293611332431419, 0.0294316069293248, 0.0292425931314676, 0.0289526600710227, 0.0284929795625673, 0.0279016870417933, 0.0271825187335756, 0.0264338776477969, 0.0257612987876615, 0.0251856818914590, 0.0246687581048758, 0.0241754669722763, 0.0236898073573784, 0.0231866912543513, 0.0227051957329915},
            {0.0831530050402693, 0.0864955420002110, 0.0895464514584938, 0.0921859081302760, 0.0943111278401313, 0.0958717594960178, 0.0967535356184249, 0.0969960263943483, 0.0966164859211954, 0.0954819526802608, 0.0935578704927265, 0.0910370127085479, 0.0876046726454035, 0.0832639046114149, 0.0778663397282626, 0.0718475316122298, 0.0655148645291490, 0.0590740507216404, 0.0524248856846680, 0.0457298208884282, 0.0384911157316185, 0.0305004646108703, 0.0219511770073695, 0.0131705967557333, 0.0042416794466436, -0.0043827489196916, -0.0126822940967922, -0.0203320199919149, -0.0275020626987723, -0.0341480249847100, -0.0402402053362124, -0.0455322142832034, -0.0501549640667825, -0.0539170897670249, -0.0572092429058564, -0.0599267572612328, -0.0622388714762742, -0.0640268102071855, -0.0649187783777435, -0.0643491133424772, -0.0622722534794208, -0.0583009863036175, -0.0528354020562486, -0.0461228406189362, -0.0384694082104091, -0.0299174225534890, -0.0206563812520466, -0.0103293397691637, 0.0009008941633421, 0.0131003027527576, 0.0255819578204584, 0.0379660827428461, 0.0496246201817014, 0.0603376305823555, 0.0698928966986244, 0.0784709834423284, 0.0861661280694180, 0.0929575910321137, 0.0988504129061048, 0.1039138232606653, 0.1082687657481435, 0.1114513261659083, 0.1130852673594407, 0.1125212268203205, 0.1098970326417927, 0.1050699307670352, 0.0985764863001443, 0.0910608375249462, 0.0834233707241309, 0.0760445879042153, 0.0693926754793810, 0.0637522259274253, 0.0590159821045158, 0.0544736825038749, 0.0491028558496499, 0.0409808333257051, 0.0274274112301348, 0.0063892726552548, -0.0217818914687359, -0.0528226484815995, -0.0801499709262516, -0.0983557866695129, -0.1050901235511847, -0.1012365727735776, -0.0915042078044482, -0.0819468334935784, -0.0764062129331308, -0.0758757072610354, -0.0793084313645693, -0.0840876392908447, -0.0874128571513068, -0.0874451781012943, -0.0830098585225801, -0.0729232481921076, -0.0561614598040220, -0.0325519513939800, -0.0039939107665505, 0.0260446718689417, 0.0545892323595404, 0.0801736244270300, 0.1021599709508651, 0.1202011472325026, 0.1342913808702476, 0.1448647680835687, 0.1524004950126043, 0.1573506219123639, 0.1600332377144967, 0.1605289366370770, 0.1587576673976842, 0.1546628035297997, 0.1480534164090689, 0.1388961317260348, 0.1276878713779416, 0.1152434599721401, 0.1025121347464408, 0.0902273562509024, 0.0786587213258090, 0.0673985371061125, 0.0558056960448644, 0.0431978116342387, 0.0292977721976709, 0.0144332215412155, -0.0006257346163787, -0.0149924178649223, -0.0278664719508111, -0.0387349587628011, -0.0475552191952786, -0.0544003584407699, -0.0593714909227937, -0.0625412068208789, -0.0640523339110013, -0.0640735115021752, -0.0628069917486290, -0.0605000630205637, -0.0574969945518807, -0.0540316477427951, -0.0503713685748932, -0.0466281320466980, -0.0429120226437562, -0.0392052446704583, -0.0355794603018586, -0.0319599649482508, -0.0284019992554889, -0.0247476458808246, -0.0209583303452605, -0.0168451840646234, -0.0122368986019095, -0.0070420937811858, -0.0012268351960168, 0.0051565715600270, 0.0119066478368045, 0.0188061288836855, 0.0257670377127347, 0.0325793695691849, 0.0391296012720607, 0.0454606928132499, 0.0514894850575996, 0.0571999421175227, 0.0625662174008917, 0.0674884040438122, 0.0718852495469844, 0.0758070698565677, 0.0790843470653289, 0.0816895627610295, 0.0836527406270088, 0.0848918920596772, 0.0853696243251038, 0.0851552399836044, 0.0842899295435838, 0.0828052067787921, 0.0808538010813531, 0.0785105352106045, 0.0757896495421617, 0.0726930292844296, 0.0693756061784883, 0.0658295071078294, 0.0621082508523988, 0.0582300357193122, 0.0543019448939257, 0.0502200906723553, 0.0460541089472237},
            {0.0225048653534266, 0.0219925747724386, 0.0214653617100307, 0.0210628221939302, 0.0208707467319461, 0.0209950062607991, 0.0211921708106299, 0.0213985009266309, 0.0217568822179908, 0.0220659319826784, 0.0220182575401892, 0.0216734842492181, 0.0212085145100968, 0.0204218594143103, 0.0195734354157623, 0.0185192906410888, 0.0169109825477596, 0.0147739854172229, 0.0121513698766965, 0.0086363951700178, 0.0046044401293387, 0.0003751583787324, -0.0043095110738792, -0.0093855359142059, -0.0144316061112441, -0.0195893221385536, -0.0247268854670598, -0.0298356569592676, -0.0349195077674545, -0.0395023134798822, -0.0436623785637603, -0.0469728761054688, -0.0495277789630011, -0.0508904909389189, -0.0518371808775979, -0.0520690689509130, -0.0521067333882224, -0.0513430416599363, -0.0501105162478671, -0.0482227559243558, -0.0460498851365135, -0.0430663652917092, -0.0390779602257283, -0.0333466814682756, -0.0256759226298026, -0.0157030439015888, -0.0036312725409330, 0.0098264648779515, 0.0237242885919860, 0.0372117336517044, 0.0499069852149932, 0.0615013012486053, 0.0718122684236301, 0.0801774022473992, 0.0867551154631085, 0.0913841087847250, 0.0934989698486669, 0.0933776518324183, 0.0906998798923302, 0.0857975901994088, 0.0785440375029562, 0.0689630126628650, 0.0565681959885346, 0.0414888185387452, 0.0243343061779103, 0.0059285977403565, -0.0126970985421414, -0.0308752271579391, -0.0479626444104102, -0.0640403397584128, -0.0790214488343557, -0.0930485391782525, -0.1058791146849679, -0.1173156818118117, -0.1269788901886367, -0.1347951594788215, -0.1406306392590560, -0.1442193008503915, -0.1449738438712508, -0.1431649657446702, -0.1406326707538170, -0.1394401941485273, -0.1394649647734274, -0.1392621390898312, -0.1374502007214736, -0.1339298648607653, -0.1301437701932104, -0.1279535481650154, -0.1277866315780677, -0.1290700307922145, -0.1314163920678479, -0.1342580831205911, -0.1366143404742207, -0.1374889694441041, -0.1357790024627280, -0.1304941461706086, -0.1213314594293303, -0.1096922129257407, -0.0982625153775454, -0.0895416364737793, -0.0845870849116695, -0.0834056173077186, -0.0847912810294933, -0.0869097516394764, -0.0883513913747952, -0.0885319430577782, -0.0873224587470244, -0.0848067283991168, -0.0809408790809798, -0.0756262337420759, -0.0688602229077403, -0.0610138656849154, -0.0529623731145285, -0.0458929832947404, -0.0410166882684346, -0.0388792982958515, -0.0390263329054759, -0.0404715799634875, -0.0420163424759754, -0.0426388686734886, -0.0418985325449569, -0.0397847021219965, -0.0365675207164205, -0.0326448527701357, -0.0287321059655782, -0.0254870097251840, -0.0236178687264748, -0.0235079219316210, -0.0253180505362549, -0.0287459467358194, -0.0334662780175625, -0.0388249353179647, -0.0442132140062278, -0.0490533404586324, -0.0528821168636970, -0.0553052629274626, -0.0563391613473835, -0.0563448611235956, -0.0558333034463848, -0.0552324497578456, -0.0548294048412879, -0.0548923185294744, -0.0554164126769513, -0.0564869050531857, -0.0582069538768436, -0.0606488458682803, -0.0636967729903921, -0.0672102443380193, -0.0708689016535820, -0.0745813844465602, -0.0781226400243572, -0.0813718334821616, -0.0842795975836165, -0.0870507115139761, -0.0896686199885906, -0.0921207750373443, -0.0943844523072720, -0.0963513818727901, -0.0979155106011381, -0.0988263847109936, -0.0991566393949433, -0.0987644273482901, -0.0977755384461057, -0.0962366435990776, -0.0943261422240652, -0.0921007738891316, -0.0898052026025963, -0.0872594165370560, -0.0844789354644274, -0.0815180495483570, -0.0782749368437347, -0.0746596994798049, -0.0708358966971470, -0.0667170014950979, -0.0621430331047504, -0.0571114117917471, -0.0516145476548273, -0.0457352665893665, -0.0396582835352331, -0.0335558838811058, -0.0273751034434407},
            {0.1104055600089334, 0.1099046529362625, 0.1086283297479208, 0.1063853395523954, 0.1035315617625889, 0.1000027724477423, 0.0956524345222250, 0.0903667699393590, 0.0844456495728950, 0.0780698439296498, 0.0712302400569160, 0.0636884454278853, 0.0551881873264780, 0.0456525506932773, 0.0349174551607544, 0.0234898943342543, 0.0116805107915952, -0.0003259342011795, -0.0123636553908486, -0.0244255326419512, -0.0365647308964923, -0.0481517618984784, -0.0586127660731032, -0.0679285328464116, -0.0758162466064369, -0.0820033561684187, -0.0868792539710900, -0.0905019818654823, -0.0933461131521784, -0.0952281740469382, -0.0963854933769860, -0.0961708062050512, -0.0946922608925332, -0.0915392974805115, -0.0867556589202342, -0.0800167219654181, -0.0716617757114894, -0.0614618912535927, -0.0499063174854421, -0.0370387310209166, -0.0234507154456830, -0.0094139159343096, 0.0045920670538041, 0.0189409313520806, 0.0334844780090879, 0.0486011261349326, 0.0642804956046854, 0.0801249762519421, 0.0956322703231616, 0.1103416007070281, 0.1231618495088466, 0.1333853631576656, 0.1409190577999229, 0.1448971359691939, 0.1453953985044577, 0.1430550136501823, 0.1389722803984361, 0.1326749369592802, 0.1250240203768642, 0.1150386607677841, 0.1022637730396626, 0.0857528490917276, 0.0652648852830843, 0.0409982501360124, 0.0149217291235191, -0.0119391916914323, -0.0378932213984388, -0.0616853970738535, -0.0825286982073328, -0.1004253236586782, -0.1147971672023238, -0.1254807080743384, -0.1319193176490037, -0.1335430215708199, -0.1299743315673913, -0.1210729111816078, -0.1060349404146066, -0.0835892258367576, -0.0537239725764624, -0.0190319802263943, 0.0155932111217149, 0.0459086936469829, 0.0693841668482966, 0.0853971728604765, 0.0951380260206074, 0.1016891119412262, 0.1081488269701913, 0.1160729348482626, 0.1247313009854663, 0.1321726493707073, 0.1368134422969183, 0.1378985530980017, 0.1350117391673655, 0.1279897021951521, 0.1164719510120800, 0.1005001196834376, 0.0821327986422902, 0.0649297597239679, 0.0516206857806806, 0.0432169260630681, 0.0393018503294846, 0.0377040683259655, 0.0358883218586857, 0.0322912817967992, 0.0265388094198988, 0.0187040806364237, 0.0093412553786755, -0.0008173833691397, -0.0114435081749837, -0.0223106653813192, -0.0334051843586283, -0.0441657596198968, -0.0537151590489333, -0.0606898496127058, -0.0640642882357645, -0.0632125349972485, -0.0585593198955077, -0.0508483212699952, -0.0412025593192691, -0.0306437088640560, -0.0198658074409003, -0.0091409379503472, 0.0010111586355787, 0.0102490976849349, 0.0184121522462920, 0.0255648070407057, 0.0318447704244002, 0.0377812620525620, 0.0436973185788926, 0.0497206714569376, 0.0558184364921060, 0.0618205425007109, 0.0674311525019415, 0.0724012916181656, 0.0764248748552907, 0.0792666707316464, 0.0809221305601525, 0.0815024204842372, 0.0810383921348402, 0.0799996555567702, 0.0786996306965058, 0.0773229640411052, 0.0759536437314088, 0.0746565828372480, 0.0732937903790128, 0.0717822176471418, 0.0701919129848579, 0.0684176876586191, 0.0664005807130244, 0.0640971842637083, 0.0613253212009747, 0.0580297037744963, 0.0542431329761527, 0.0501993810549870, 0.0459715128732898, 0.0417959490989561, 0.0374978026627236, 0.0331652140778296, 0.0287458905370955, 0.0242544293938491, 0.0197055484066360, 0.0152106860089216, 0.0107593600879498, 0.0063726950749003, 0.0021179660335408, -0.0018625774120655, -0.0056040535219090, -0.0090087806819836, -0.0120164094789899, -0.0146383053274151, -0.0171148079302592, -0.0194015957066126, -0.0217207107234461, -0.0241043005583994, -0.0264572904988965, -0.0286855332897053, -0.0307181353325361, -0.0324055254432227, -0.0338338379936212, -0.0351003681978419, -0.0361769656413977},
            {0.2052627582218552, 0.1940121446665480, 0.1815180113305505, 0.1678569794840900, 0.1531797036423959, 0.1378905228435462, 0.1218621847111718, 0.1047960341046735, 0.0870763930140107, 0.0687835011096276, 0.0501317194278926, 0.0311691746673975, 0.0121317752684524, -0.0071652637560533, -0.0262065943087644, -0.0446130175566606, -0.0618214300652117, -0.0777511393261150, -0.0920635430339291, -0.1043323826580503, -0.1145866807850212, -0.1225513597009661, -0.1285164580400422, -0.1320765720275302, -0.1338573017463116, -0.1335772490529209, -0.1310652320923983, -0.1258946698079406, -0.1181551845567190, -0.1070232146514645, -0.0927831026764352, -0.0755989376182005, -0.0556036389523192, -0.0336671133197045, -0.0111699447866542, 0.0119774915066383, 0.0352954653508240, 0.0580022183939266, 0.0797467505180712, 0.1001390356808124, 0.1177548535495229, 0.1323298025589061, 0.1434892659527844, 0.1507736847030224, 0.1533708987511854, 0.1509648601083388, 0.1426501760631872, 0.1281261168497412, 0.1076009873166460, 0.0827486051986416, 0.0561795320159995, 0.0294337540556693, 0.0041371827695359, -0.0187682697661525, -0.0392416681887737, -0.0574111563667484, -0.0728203911093745, -0.0854122825490411, -0.0952712005917578, -0.1019272808238775, -0.1053451515525541, -0.1046426143440385, -0.0992378982291370, -0.0886261798682436, -0.0736855389193699, -0.0554102231222972, -0.0355069825438218, -0.0151055516779933, 0.0046659624576887, 0.0233202752591298, 0.0402189835588892, 0.0549034782951885, 0.0668226270085032, 0.0754367872303958, 0.0797124903437030, 0.0785050293817541, 0.0702047270401510, 0.0534595349522156, 0.0290999217778489, 0.0016735813672788, -0.0225435745752251, -0.0392975648881812, -0.0468329351599042, -0.0452960951859338, -0.0369508728025164, -0.0256408775290255, -0.0138446632783614, -0.0021153800938709, 0.0091620021661769, 0.0185460207694792, 0.0245144326870092, 0.0259971673222228, 0.0221567012276504, 0.0127673998423103, -0.0015591193932815, -0.0193634879671635, -0.0380302025527722, -0.0547167106338987, -0.0678449423231138, -0.0768706696018428, -0.0815055027306136, -0.0816791274809476, -0.0778800088226842, -0.0710788471722812, -0.0621854380466194, -0.0520122140767782, -0.0412935053042467, -0.0304690961230097, -0.0196315001067234, -0.0087598605438064, 0.0023055632164835, 0.0135679986913940, 0.0248538761058896, 0.0358336343743749, 0.0461632563277886, 0.0553420906832929, 0.0631094721565807, 0.0692364263711030, 0.0735654251289730, 0.0757448707218727, 0.0754661562862749, 0.0726481942925002, 0.0677898309163096, 0.0613913078519264, 0.0542454162970080, 0.0470965899295699, 0.0402580503991968, 0.0336299111157491, 0.0270416737634748, 0.0203051384854557, 0.0131894530913134, 0.0055772856149065, -0.0026085062115193, -0.0113063264268210, -0.0203491257206125, -0.0293121328989644, -0.0377891051403647, -0.0454291841418429, -0.0518902779180541, -0.0571658241754091, -0.0612321272171452, -0.0642759071095891, -0.0663591817110744, -0.0676565705102926, -0.0684073737258354, -0.0688227149939023, -0.0688705919124202, -0.0685685715610909, -0.0679620467634847, -0.0668455502839108, -0.0651625417388779, -0.0627700871060662, -0.0596806920465357, -0.0559460962896373, -0.0516696514428160, -0.0470394664785341, -0.0421674652293368, -0.0370126197943260, -0.0315340086932427, -0.0257433620169502, -0.0197468078408391, -0.0134691035382215, -0.0071547285803997, -0.0008461294514585, 0.0055179782507368, 0.0120357509293505, 0.0184943419837135, 0.0248499042188873, 0.0310459445890589, 0.0369860560814727, 0.0426625490872852, 0.0480109219843893, 0.0529521948483326, 0.0574232763123045, 0.0614089327788430, 0.0647256632927002, 0.0673714935864692, 0.0693889364994564, 0.0706734578366668, 0.0710712421555339, 0.0706792942859031},
            {0.0365459166661544, 0.0349694040400830, 0.0331752905291597, 0.0311380300018954, 0.0287021171030141, 0.0258914910226793, 0.0226173893400260, 0.0192474990882448, 0.0156176503362013, 0.0115286477719684, 0.0069426344968598, 0.0016933136874504, -0.0042446732093635, -0.0106559499027018, -0.0171925467603581, -0.0235632567718023, -0.0296650837958355, -0.0352485080553927, -0.0400208504461855, -0.0437522717315088, -0.0465681775547607, -0.0482061537047892, -0.0486723256023780, -0.0480561298756357, -0.0466829124182509, -0.0445643819091805, -0.0419194277696562, -0.0388421690173670, -0.0349614554473995, -0.0295829705609481, -0.0227825662693793, -0.0136560883179997, -0.0030012145087082, 0.0081412205313560, 0.0184291588892602, 0.0282574237222526, 0.0371287738315601, 0.0455016961739276, 0.0535141695138137, 0.0615353639850591, 0.0692362920186048, 0.0758655126479901, 0.0814838960821589, 0.0856191390661602, 0.0880868292800840, 0.0882262484826722, 0.0864635592288816, 0.0827466420765909, 0.0766829761732954, 0.0682492196670256, 0.0575093123625811, 0.0446911699746005, 0.0302275562377817, 0.0154417927671177, 0.0012662694186648, -0.0120924345261716, -0.0249983527661533, -0.0372851249434237, -0.0485579998491022, -0.0595003817041874, -0.0694443184946044, -0.0778232683334003, -0.0852466574918787, -0.0909813275395619, -0.0934565590346449, -0.0924904279720100, -0.0879288058601616, -0.0803250357704600, -0.0704258773131771, -0.0586892859128385, -0.0449365656745263, -0.0292930808977846, -0.0113425082107268, 0.0090296540814233, 0.0312186230720101, 0.0553249885013193, 0.0821384334827787, 0.1110336445022915, 0.1376487996536755, 0.1542155882521302, 0.1535324465778146, 0.1328885703732902, 0.0941522539761789, 0.0429851390609544, -0.0107939417691057, -0.0580833582815075, -0.0969696192122907, -0.1306050678276558, -0.1611087646655600, -0.1874347009439240, -0.2067932359964524, -0.2155298255142947, -0.2095675141692261, -0.1856510776995010, -0.1420956303553128, -0.0818073477149216, -0.0140452295680089, 0.0489277924265969, 0.0980497869431339, 0.1291636694187223, 0.1426414200787408, 0.1418325789892258, 0.1318311723933678, 0.1177516905633146, 0.1032903590662301, 0.0902750249369508, 0.0788387814381995, 0.0678647270085757, 0.0556535944984012, 0.0406919313016908, 0.0222179152330099, 0.0007015787015035, -0.0224989243251269, -0.0453524878144452, -0.0659554342364148, -0.0829992922404135, -0.0960175653089011, -0.1048990721820309, -0.1097618035125732, -0.1106052612830430, -0.1072164710276064, -0.0999351642864214, -0.0897606706539321, -0.0779511153290014, -0.0660449610900659, -0.0553723537884073, -0.0464715176506168, -0.0393769599085104, -0.0338756241902093, -0.0294568539148412, -0.0257496808081038, -0.0224103863477825, -0.0189291155992210, -0.0147472672420233, -0.0095388191653620, -0.0031537790240911, 0.0043628272445456, 0.0126610801719932, 0.0211022164635110, 0.0292619148053846, 0.0367739859627046, 0.0435188515420704, 0.0492718339805550, 0.0540415224398392, 0.0576718871513306, 0.0603562065332336, 0.0620680967666057, 0.0628161199727449, 0.0625361606973381, 0.0615368215059124, 0.0596673994652113, 0.0570559287643197, 0.0538242308513731, 0.0500698077611773, 0.0455435896612035, 0.0404437862287763, 0.0348071342761031, 0.0286995332035834, 0.0221844641510672, 0.0154701884507313, 0.0085876554565100, 0.0015193069943914, -0.0055193475605930, -0.0124881701215761, -0.0195201057567607, -0.0265700361878204, -0.0335072729944330, -0.0403447265507803, -0.0472188996468237, -0.0541434601820096, -0.0610663916382295, -0.0681301093482860, -0.0753195494810629, -0.0823759033071300, -0.0890412316583921, -0.0952540614675074, -0.1008074379002187, -0.1057757763906938, -0.1102571725075044, -0.1142283844159273, -0.1175013082835427}};

    static Double[][] pesos1 = {{-1.7571456642038517, -0.0506072381677040, 0.0106783214956464, -0.0247518102043067, -0.0355488387911637, 0.1913883479427403, 0.1177214531910732, -0.2005154025969564, 0.0116498252770900, 0.1256587650789268, -0.3964120248350858, 0.1791418607844130, -0.0138396726040856, -0.0149119196995780},
            {-2.6018206691453640, 0.0083616197188330, -0.0097131823166908, 0.0081546597183160, 0.0185738311379653, -0.0109282729372399, -0.0261498674320351, -0.0021350293560421, 0.0275705554085151, 0.0543684727816393, 0.0192693052583969, 0.0798341966731226, 0.1049099070080843, 0.0931702977681032},
            {1.9605765578537262, 0.0782830927985487, -0.0494644045161830, 0.0920717327013272, 0.0712843256074451, -0.2018933866391847, -0.2303672847988239, 0.0671702652185037, 0.1051536599315932, 0.0015909350243258, 0.2184325880948236, -0.1211136707327080, 0.0296494501856826, -0.0200949219150671},
            {2.6840495477661119, -0.0039308403567582, -0.0219586296568014, 0.0155991373003169, 0.0205600069580596, 0.0185171813376864, 0.0457962604678446, -0.0114682382690931, -0.0313178970200333, 0.0114958347357935, 0.0182154538374044, -0.0009341025606912, -0.0156248006527299, -0.1281727135422218},
            {2.1699814241217350, 0.0713058945452735, 0.0953034619569785, 0.1075951995538273, -0.0292501888954644, -0.0798443370781615, 0.3577789408170843, -0.0538458653550573, -0.3260822817808598, 0.3292911051101993, 0.3498380778550814, -0.4245475387993556, -0.2418304946094844, -0.2081779006989843},
            {-0.8236740004176185, 0.2136852513399011, 0.4604551950567394, -0.2776954277145327, -0.3288462822654500, -0.0628309786206530, -0.3500853910938674, -0.1946304245749289, -0.0649530821208360, -0.2006510825398709, -0.1534812573805985, 0.4628734852220937, 0.0018105877086854, -0.1996586398311754},
            {0.9089146991046606, 0.1706535855691647, 0.4679016024768051, -0.6550137892693103, -0.7410239933453231, 0.4764774940232369, 1.0131583983269625, -0.3286892314475001, 0.3385614587601942, -0.5421257906121513, 0.3185133024444790, -0.3967682349164281, -0.0278937390417442, -0.9687144606540959},
            {-1.2362873895569455, 0.0707970356295092, -0.0156052840716005, 0.0059807883365762, 0.1235594616806543, 0.0891525687992777, 0.1961971052252583, -0.1323262192625860, -0.1006695364774637, 0.1767370206108437, -0.0655004002055159, -0.2705199225324974, -0.8284571115344021, -0.0129160072156810},
            {-1.2515019399354794, 0.4079407917225206, 0.2336877814635654, -0.0181213453551080, -0.0273069076149118, 0.1205381212783594, 0.1336316423319074, 0.5111574503296218, -0.2265245165988958, 0.3442540932764894, -0.2948292077023621, 0.3279773763731960, 0.6803498668476147, -0.1657162254276736},
            {2.2833203314601032, -0.1781037515769275, 0.1371877721763639, 0.4892542532845709, 0.3699113980617829, -0.1669341012918758, -0.4027852553778374, -0.3308788967260345, -0.4191067806568012, 0.5151673268091983, -0.0104927903173313, 0.4676556787700820, -0.2045770688028361, -0.0055529222312708},
            {2.0423284509329922, 0.0168702898273160, -0.0091300599898344, -0.0609664625114541, -0.0818798051819612, 0.0185462222868227, -0.1256382998110366, 0.0192137744735241, -0.1161638336014231, 0.1197035712990562, 0.2917017588635666, -0.1766716974330145, 0.0321401732062862, 0.0391024136300169},
            {-0.6939841315860629, 0.5453235068684946, -0.0221193777946103, 0.4920688016971590, -0.1603042345134985, -0.0582881093500642, -0.2513998766916195, 0.1854423341598845, 0.3748493883727602, 0.4444941663549860, 0.6285354722094959, -0.6290656209226718, -0.0099363166259861, -0.4633284153321944},
            {-0.8193098467737616, 0.0074685915604124, 0.2159242504090600, -0.2382259236750902, 0.0790340075582285, 0.0570111955202597, -0.2279698682129540, 0.0628475404644119, 0.2669689656131277, -0.0216121831793973, 0.0667554213597112, 0.1073867190579985, -0.4281204480559688, 0.0532755928794575},
            {-1.7943267417611859, 0.1649460135207833, -0.3348516876770248, 0.2471183786355487, 0.4148151067972439, 0.2592459055325628, -0.2071976173821386, 0.0986445014593651, 0.0820653708027273, -0.6016292623862075, 0.2532098625640334, 0.6427773264128127, 0.3130174806498146, -0.1383652491607098},
            {1.1952567344704459, 0.0169838257803898, -0.0757923599364120, 0.0267913615963555, 0.3345583345163280, 0.7239718693544383, -0.0442295377784210, -0.1745599271112782, 0.5636267738340499, 0.3917914722144307, -0.3858833851294607, -0.4764079678955244, -0.0204226422587494, -0.0227259400145303},
            {-1.2438820709472713, -0.1507634881612549, 0.3490792280633870, -0.3714029616046506, -0.3899756522592451, 0.0976495621069218, -0.1663704660149966, 0.2731973410736719, 0.2843973932058975, -0.3213690003917526, 0.1009199031870223, 0.4924062854987703, -0.1369950108438674, -0.0819050540077326},
            {0.6157473587613198, -0.5869016431336471, -0.8458913771287742, 0.9022961565604710, -0.0399653416817570, 0.4616207178548644, 0.5635538051900773, -0.0882700963842549, -0.2803602799220266, -0.5752383166367298, 0.1918700441343773, 0.3974985632896317, -0.0787940019693016, -0.0537214040980506},
            {0.6112052668386104, -0.4040273919521804, -0.6162456341716650, 0.3848349641157089, -0.0123815836343796, 0.7619971699869464, 0.5513881567101647, -0.0680845914609848, 0.1493086239339228, 0.0612383349572236, 0.1123157446188818, 0.7595051264944288, 0.0357751359769554, -0.3847928687450688},
            {0.4805198210522351, 0.2685459696270420, 0.1355848970043010, -0.0523749414626066, -0.2042719128636750, 0.1444376518742709, 0.6746856845996715, -0.3829182640422578, -0.1699850265922021, -0.1989442911066679, 0.9361973012554784, 0.9106512642822864, -0.2551157669413737, -0.9116982259377128},
            {0.7165966043886215, 0.1409134879477907, -0.1415386875765864, 0.0535536309711075, -0.1448026678706023, -0.0133147908529181, -0.0110921388554333, -0.0274548318458279, 0.2900986671003541, -0.1196725355076745, -0.1774942354942786, 1.0756964762355916, -0.1659694728830077, 0.8537922685116740},
            {-0.3325370164539648, 0.2873233837528527, 1.0613709707966028, 0.8620793603993910, -0.1239496654972674, 0.4413601593860989, -0.0806965577613375, 0.2223841383227361, 0.0930354777439900, -0.8793825665036025, -0.0065283695929456, -0.0767093641747071, 0.1226931774658024, 1.5580811297800077},
            {-0.0893903021907557, 0.2616925680872689, -0.4464530786990278, 0.5188369308457227, -0.0124570590450698, -0.7898585419579945, 0.3091628395225768, 0.5066186366811246, -0.6672881715915078, -0.3700252255258004, 0.2329714201455050, -0.2758394711707959, 0.0614176903290994, -0.1291288576743874},
            {-1.4425105921341501, 0.5633924808147381, 0.1334409062861612, -0.1332303142055762, 0.2734030353079289, 0.0892236817395357, -0.0565557061411330, 0.9551614618005726, -0.5663102763021836, 0.1106594321754684, -0.4155187143963738, -0.4850691187203718, 0.4638755284921793, -0.2886264245237222},
            {-1.4495520072452899, 0.1130413542238303, -0.1170564635242370, -0.2247748834818768, -0.0324310049375184, -0.0820212287529586, -0.1761373283433700, -0.2902526363179588, -1.1961147421968357, 0.2568423983934133, -0.0048084575468806, 1.1018278819291569, 0.2492411929790268, 0.4224505731853743},
            {-0.4933672319628642, -0.3018464252904293, -0.0203894358645379, 0.1180186247388071, -0.0927085556304648, 0.4666307174473067, 0.8297323650070314, -0.1037830429379374, -0.0291972965878738, -0.1265051528260147, -0.2036354174974795, -0.2922525091127968, -0.2166579338901886, 0.0920310005215233},
            {-0.4239246565699346, -0.7020660991182670, 0.1705238147122659, 0.3263938860936366, -0.2076929774728687, 0.2457764506086682, -0.0408174675114115, -0.2648189648493016, -0.2229624673992687, -0.1605426852586578, 0.3881750757753469, 0.1751491474130789, 0.0179867157921828, -0.0391072781579528},
            {0.8501407265324130, -0.1787420151976288, -0.6220497984022493, 0.5015064510617013, 0.2226426218618874, 0.5778474730486595, -0.1407043474826005, -0.0507160865950314, 0.4159200505152271, 0.6410034485161389, -0.3301527745664440, -0.0292847108567753, -0.0991970176632531, -0.2225858289213623},
            {-1.6638914398512390, -0.2600187962120662, -0.4028737930808558, 0.2255039342199940, 0.0732283919373194, 0.1040005961004713, 0.0449267573937877, -0.3423907713608351, -0.0196239700865069, -0.0282458374278644, 0.1692889610782816, 0.3466714878694234, 0.3507566905757487, -0.1598409816861565},
            {0.9192660358336250, 0.1486328542123406, 0.3605004627738476, 0.4258704956199560, 0.3713877641712746, -0.4320911053311110, -0.5022033602276543, 0.1116965627335497, 0.2426085784785889, -0.3531452495171567, 0.2347662858056403, 0.4461204448125698, 0.0007666886983894, -0.1795243675992039},
            {-1.9213866069432792, 0.0855871729248153, -0.1578402632831044, -0.2226922812171645, -0.0266958595554425, -0.2634458521551324, 0.0023879593200604, -0.0737769900062184, -0.2214141081524992, 0.1668864045211386, -0.2847922426788480, 0.4718895468880401, 0.1369115150424779, 0.2330212107889184},
            {-0.1414753077752630, 0.0058198639234098, -0.0433491489957240, 0.0491583585068594, -0.0157928353627011, -0.0095761785602162, 0.1722326631022249, 0.0250263173127347, -0.1275693436729986, -0.0788342246846928, 0.0774244640098848, -2.3605884127173407, 0.8635102303435334, 0.0741609352346793},
            {1.8839025642041387, 0.3908168140669387, 0.0175235663748618, -0.2592518092656017, -0.1550845356684825, 0.0958818210767942, 0.0919005770773256, 0.2912351325865765, 0.3650436549970926, 0.0112661255233341, 0.3855824446405959, 0.0073305574595874, -0.0827129264102001, -0.5400889616161041},
            {0.8962373028856517, 0.4994422310429569, 0.0324844816746699, -0.3214236102440609, -0.2591946031328310, 0.0989452362877852, 0.8680321997757495, 0.1518763320707643, -0.8528390870282573, -0.0295078878932547, 0.5422106113771119, 0.1871997136142610, 0.0255324179969415, 0.6162820669894186},
            {0.5017968239060530, -0.4784926515155911, 0.0872478619526889, -0.3141755198720851, -0.5258896244802958, 1.0266306667658667, 0.4303314065334347, 0.5633143145401270, -0.0070235271779132, -0.5017687776063924, 0.4147169950716198, 0.6505659348952738, -0.6595010355358154, -0.1022268357998081},
            {1.0190773709713616, 0.4384326036689087, 0.4174481149726473, -0.0804895341682441, 0.0834842537853129, -0.5083115716422678, -0.7366767969378617, 0.2700398988282273, 0.4194661186417470, 0.0655936316418709, -0.1892528405395431, 0.2937999146290178, 0.0958064055425447, 0.3951699304707950},
            {-0.9559216750311459, 0.1441935506484133, 0.0188132513584171, 0.1300248174830013, 0.0130390277247552, -0.0603407355575293, 0.0569224586508851, -0.2776145337832367, 0.1842265509312867, 0.2992397905562584, -0.4477585506143421, -0.5951356059995547, -0.8904567089083467, -0.2253032503362428},
            {1.3348559934197248, 0.5190335938180921, 0.1527951271300783, -0.0289138627598106, 0.1078503830524771, 0.0693720544430977, 0.3110826673726430, 0.9365374533980874, 0.0507605814579415, 0.2063916929262721, 0.6035125398848100, 0.0257796005383094, -0.1644613452668549, 0.3685200217116298},
            {0.5339379785006958, -0.3657792923107079, 0.5503100896767026, 0.0945725640259311, -0.2634596484772641, -0.6354871209791922, 0.6471387218805936, 0.0422276581382817, -0.2159212922644524, -0.1060281907364104, 1.0541177152584094, 0.0699168618385853, -0.0356085486309466, -0.6009132690785058},
            {-1.4511920485825833, 0.0220147484446865, -0.0056804887177291, 0.2426898759694135, -0.0607679004556681, -0.4416956389339435, -0.1047117744044495, -0.0930635868740146, 0.2100700070507839, -0.0421054528860348, 0.0851866546862012, 0.1931257421737824, 0.6693458199979626, 0.6691156360195978},
            {-1.6700956522868338, -0.4937910619132578, -0.0916329685592028, -0.1325978741054568, -0.3199249490049275, 0.0668854896219368, -0.1549934757539344, 0.1726873517674249, -0.0975009933635311, 0.2895077798520465, 0.7625358134059475, -0.2539846563130901, 0.0653324905058096, -0.3710883133653838},
            {1.3710020334478272, 0.3545201264283506, 0.0620371556573422, 0.2097551109757536, 0.1151907882327422, -0.3884043041089941, 0.2277657389505194, 0.2719190731771142, 0.4865813063827300, -0.4851265597799852, 0.1942228804645079, -0.2917761793893845, 0.5840538313140662, 0.2803980248865932},
            {-1.7099228678140543, 0.2062669370299532, 0.7429364980302955, 0.3188337973478401, -0.3507781614173677, -0.0099049102756835, -0.0336383315253243, -0.3037266653812023, 0.3814128037656135, -0.4633257606310232, -0.5269979619657320, -0.1011571057043471, -0.0845821773095001, -0.1815983656147809},
            {1.3197159810033132, -0.6209710195525983, 0.5171586015387126, 0.1024991749694247, 0.0745176946474380, 0.2480652957292561, -0.5966601865204104, 0.5830863691022857, 0.0168403230835500, -0.4929605700949338, 0.0939970967016684, -0.1307101174366560, 0.1821730660368923, -0.2032858382179388},
            {-1.5255432119568153, -0.0134835512043569, -0.0254865823790546, -0.0881576079039040, 0.0779593878171010, 0.2153811467148374, 0.1357250889483507, -0.1638386875053267, -0.0071959554466436, 0.1726229754916361, -0.1912283195508189, -0.2386373340815114, 0.1689401585526049, -0.3528775233988535}};

    static Double[][] pesos2 = {{0.3753333454537803, -0.1261574629304309, 0.2846392366414537, 0.5502551077318125, 0.7412188291161278, -1.0489797700969843, 1.0392871940548876, 1.4307641620187093, -0.1094074905679382, -1.3405806899754973, 1.5703815529043748, -0.2377681568721118, -0.9556243254732489, 0.6122092205243770, 0.5952781020577858, -0.9077691231954026, -0.4839129461640419, 0.9543651798616479, 0.8225564053215050, 1.0617868158264820, 0.3761754000998038, -1.8754556291907449, -1.8346006212490220, -0.5359480028402157, 1.5953020888018026, 0.9785314890776312, -0.5397334205527410, 1.3074200338444637, -1.5541671504353562, 0.8792057093930588, 0.1656660819764425, -1.2611264842783159, 1.7556014283723262, -0.8461982978174663, 1.4300820951202180, 1.2413741835199534, 0.8277924015624634, 0.5927549145948959, -0.3127085995418644, 0.1193526997903892, 0.4585780238767165, 0.1589768107665744, 1.4095336868064348, -0.6707040248762107, 0.3619644061644658},
            {0.0119436178726280, -1.2108935571761368, -0.2692983226577392, 0.5737551811431442, 1.1044970833098280, 1.3552065031421865, 0.5804383004446214, 0.9646285716876286, -1.4101879925277154, 0.9960690537850072, -1.1265615631101622, 0.5954810602598741, 0.0781204405125188, -0.2019503821833736, 0.0399522077757836, 0.1574527474364443, -1.1727561443200927, -1.6881349578663640, -1.2855382075710566, -0.6005705806552615, -1.4833480711431748, 0.8440987448869386, 0.2136318937037381, 1.2525296230781360, 0.3415266452407298, -0.0904103880549738, 0.2399394681342091, -0.2441858832570301, 0.6118255887963363, -0.3244715296346942, -0.2486378453882945, 1.3650487581395787, -0.5167398177191022, -1.1660614563965372, 0.1971314314209320, 0.1450083929148696, -1.0357520389668828, -0.3928642599384840, 0.6865848252741754, -0.0836489891292809, 1.7805781735432455, 1.1620905604981917, 0.6482915217611717, -1.1585629107859445, -0.2081342426058821},
            {-0.9546843623408160, -0.4132075924893053, 0.5304414049170731, -0.8070311413022759, -0.0288356247849714, -0.6453909462903292, -0.4146216579659752, -1.6652833791131412, 0.3426964677710806, -0.7358766749894787, -1.2781697929731424, 0.3910188251862868, 1.2279909937567091, 0.7132818047299253, -1.3223027386891693, 0.7657196280143168, 0.3790529213119204, 0.2198528152731740, 0.8203360125980560, -1.1025477733049798, 0.6088047923736198, 1.2944756577785927, -0.0528789438232088, 1.5490655127808728, -0.9939668809744479, 0.1841464083962945, -0.0497810212095870, 1.2668519385262580, -1.0562689490822079, -0.9021116854886634, -0.7822141385722358, 1.4400794498094578, 1.2178969816578196, 0.8940914308242242, -1.7188133570120856, -0.3304304114725103, 0.6062674894053833, -1.2691090156427822, -1.6997464780189515, 1.6627059580575896, -1.1514861982926252, -1.2125161476309212, -0.9956868183003435, 0.1328413160800381, 1.0020806610826851},
            {0.1496122342637503, 0.4673747112264909, -0.3025078900253057, -1.1522357851959981, -0.3269454612474377, 0.5495046329095324, 0.8028925342688047, 1.0357348183722301, -0.5992094112390675, -0.9221025722520447, -0.4334757090817230, -0.5927264778154459, 0.1702070218548127, 0.5409249500818815, 0.0592837223238708, -0.3936021170736710, 1.3496092537630289, -0.2091558639502194, 0.0727128042521158, 1.4766225917837843, 1.2051387071742399, 1.4781430286580091, -0.4500589088227016, -1.3000018515408891, 0.2821848493124070, 1.3554763040981415, 0.9287727984476711, -1.4242641044571087, -0.4873250795650806, -0.6826967334326937, -0.8589649120968725, -1.2837057246636674, 0.7580993509558939, 1.1904723098633325, 0.4536584998741539, -0.8876500723149585, -0.8021909441093132, 0.7061730121039350, 0.9917509318600656, 0.0953626490433567, -0.1351556563376591, 0.3123172526581871, 0.1624367560826856, 1.3654204671079324, 0.4088758138907886}};

    public analisisecg() {
    }

//    BroadcastReceiver buscar = new BroadcastReceiver() {
//        public void onReceive(Context context, Intent intent) {
//            String action = intent.getAction();
//
//            if ((BluetoothDevice.ACTION_FOUND).equals(action)) {
//                device = intent.getParcelableExtra(BluetoothDevice.EXTRA_DEVICE);
//                if (ActivityCompat.checkSelfPermission(context, Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
//                    // TODO: Consider calling
//                    //    ActivityCompat#requestPermissions
//                    // here to request the missing permissions, and then overriding
//                    //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
//                    //                                          int[] grantResults)
//                    // to handle the case where the user grants the permission. See the documentation
//                    // for ActivityCompat#requestPermissions for more details.
//                    return;
//                }
//                Toast.makeText(getApplicationContext(), "Encontro " + device.getName(), Toast.LENGTH_SHORT).show();
//
//                if (ActivityCompat.checkSelfPermission(context, Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
//                    // TODO: Consider calling
//                    //    ActivityCompat#requestPermissions
//                    // here to request the missing permissions, and then overriding
//                    //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
//                    //                                          int[] grantResults)
//                    // to handle the case where the user grants the permission. See the documentation
//                    // for ActivityCompat#requestPermissions for more details.
//                    return;
//                }
//                if (device.getName().equals("HC-05")) {
//                    Toast.makeText(getApplicationContext(), "Conectado", Toast.LENGTH_SHORT).show();
//                    encontrado = true;
//                } else {
//                    Toast.makeText(getApplicationContext(), "Conectado a " + device.getName(), Toast.LENGTH_SHORT).show();
//                }
//            } else if ((BluetoothAdapter.ACTION_DISCOVERY_FINISHED).equals(action)) {
//                if (!encontrado) {
//                    if (ActivityCompat.checkSelfPermission(context, Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
//                        // TODO: Consider calling
//                        //    ActivityCompat#requestPermissions
//                        // here to request the missing permissions, and then overriding
//                        //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
//                        //                                          int[] grantResults)
//                        // to handle the case where the user grants the permission. See the documentation
//                        // for ActivityCompat#requestPermissions for more details.
//                        return;
//                    }
//
//                }
//            } else if (BluetoothDevice.ACTION_ACL_CONNECTED.equals(action)) {
//                Set<BluetoothDevice> pairedDevices = btadapter.getBondedDevices();
//
//                for (BluetoothDevice bt : pairedDevices)
//                    if (bt.getName().equals("HC-05")) {
//                        break;
//                    }
//            }
//        }
//    };


    BroadcastReceiver alarmReceiver1 = new BroadcastReceiver() {
        public void onReceive(Context context, Intent intent) {
            int latidosactual = latidos, fc;
            PendingIntent alarmIntent3;

            alarmIntent3 = PendingIntent.getBroadcast(getApplicationContext(), 0, new Intent("alarma1"), 0);
            alarmMgr.setExact(AlarmManager.RTC_WAKEUP, System.currentTimeMillis() + 60 * 1000, alarmIntent3);


            fc = (latidosactual - latidosant);
            latidosant = latidosactual;

            intervalos++;
            editor.putInt("intervalos", intervalos);
            editor.putInt(String.valueOf(intervalos - 1), fc);

            if (fc < fcmin) {
                fcmin = fc;
                editor.putInt("fcmin", fcmin);
                editor.putLong("horafcmin", System.currentTimeMillis());
            }

            if (fc > fcmax) {
                fcmax = fc;
                editor.putInt("fcmax", fcmax);
                editor.putLong("horafcmax", System.currentTimeMillis());
            }

            if (fc < 60) {
                if (!bradiant) {
                    bradicardia++;
                    editor.putInt("bradicardia", bradicardia);
                    bradiant = true;

                    long h = System.currentTimeMillis();
                    new guardar().execute(new paramguardar(h, "Bradicardia", se単alf2));
                    new alerta().execute(new paramalerta(h, "Bradicardia"));
                }
            } else
                bradiant = false;

            if (fc > 100) {
                if (!taquiant) {
                    taquicardia++;
                    editor.putInt("taquicardia", taquicardia);
                    taquiant = true;
                }
            } else
                taquiant = false;

            if (fc < fcminhora)
                fcminhora = fc;

            if (fc > fcmaxhora)
                fcmaxhora = fc;

            sum1 = sum1 + fc;
            sum2 = sum2 + fc;

            editor.putFloat("fcavg", (float) sum1 / intervalos);

            editor.apply();
        }
    };


    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }

    public void onCreate() {
        super.onCreate();

        servicioactivo = true;

        registerReceiver(alarmReceiver1, new IntentFilter("alarma1"));

        Intent intent = new Intent(getApplicationContext(), MainActivity.class);
        PendingIntent pendingIntent = PendingIntent.getActivity(this, 0, intent, 0);

        Notification notificacion = new NotificationCompat.Builder(getApplicationContext())
                .setContentTitle("Holter Bluetooth Inteligente")
                .setContentText("Detectando y analizando se単al de ECG...")
                .setSmallIcon(R.drawable.ic_stat_name)
                .setColor(ContextCompat.getColor(getApplicationContext(), R.color.colorPrimary))
                .setContentIntent(pendingIntent)
                .build();

        startForeground(1, notificacion);

        sharedPreferences = PreferenceManager.getDefaultSharedPreferences(getApplicationContext());
        editor = sharedPreferences.edit();

        editor.putBoolean("terminado", false);
        editor.apply();

        if (ActivityCompat.checkSelfPermission(this, Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
            // TODO: Consider calling
            //    ActivityCompat#requestPermissions
            // here to request the missing permissions, and then overriding
            //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
            //                                          int[] grantResults)
            // to handle the case where the user grants the permission. See the documentation
            // for ActivityCompat#requestPermissions for more details.
            return;
        }

        String BLUETOOTH_ADDRESS = "00:18:E4:34:C5:45";
        BluetoothDevice device = btadapter.getRemoteDevice(BLUETOOTH_ADDRESS);
        Method m = null;
        try {
            m = device.getClass().getMethod("isConnected", (Class[]) null);
        } catch (NoSuchMethodException e) {
            e.printStackTrace();
        }
        boolean boo = false;
        try {
            boo = (boolean) m.invoke(device, (Object[]) null);
        } catch (IllegalAccessException e) {
            e.printStackTrace();
        } catch (InvocationTargetException e) {
            e.printStackTrace();
        }

        if(!boo){
            new Thread(new conectar(device)).start();
            googleApiClient = new GoogleApiClient.Builder(getApplicationContext())
                    .addApi(ActivityRecognition.API)
                    .addConnectionCallbacks(this)
                    .build();

            googleApiClient.connect();
        }

//        googleApiClient = new GoogleApiClient.Builder(getApplicationContext())
//                .addApi(ActivityRecognition.API)
//                .addConnectionCallbacks(this)
//                .build();
//
//        googleApiClient.connect();
    }

    @Override
    public void onConnectionSuspended(int cause) {
    }

    @Override
    public void onConnected(Bundle connectionHint) {
        PendingIntent actintent = PendingIntent.getBroadcast(getApplicationContext(), 0, new Intent("activity"), 0);
        ActivityRecognition.ActivityRecognitionApi.requestActivityUpdates(googleApiClient, 0, actintent);
    }

    public void onDestroy() {
        super.onDestroy();
        //servicioactivo = false;

//        if (instream != null) {
//            try {
//                instream.close();
//            } catch (Exception e) {
//            }
//            instream = null;
//        }

//        if (btsocket != null) {
//            try {
//                btsocket.close();
//            } catch (Exception e) {
//            }
//            btsocket = null;
//        }

        unregisterReceiver(alarmReceiver1);

        editor.putBoolean("terminado", true);
        editor.putLong("horafin", System.currentTimeMillis());
        editor.apply();
    }

    public class conectar implements Runnable {
        public conectar(BluetoothDevice device) {
            UUID uuid = UUID.fromString("00001101-0000-1000-8000-00805F9B34FB");

            try {
                if (ActivityCompat.checkSelfPermission(analisisecg.this, Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
                    // TODO: Consider calling
                    //    ActivityCompat#requestPermissions
                    // here to request the missing permissions, and then overriding
                    //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
                    //                                          int[] grantResults)
                    // to handle the case where the user grants the permission. See the documentation
                    // for ActivityCompat#requestPermissions for more details.
                    return;
                }
                if (btsocket == null)
                    btsocket = device.createRfcommSocketToServiceRecord(uuid);
            } catch (IOException e) {
                btsocket = null;

            }
        }


        public void run() {
            try {
                if (ActivityCompat.checkSelfPermission(analisisecg.this, Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
                    // TODO: Consider calling
                    //    ActivityCompat#requestPermissions
                    // here to request the missing permissions, and then overriding
                    //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
                    //                                          int[] grantResults)
                    // to handle the case where the user grants the permission. See the documentation
                    // for ActivityCompat#requestPermissions for more details.
                    return;
                }
                btsocket.connect();
            } catch (IOException connectException) {
//                try {
//                    handler.post(() -> Toast.makeText(getApplicationContext(), "Fall坦 la conexi坦n", Toast.LENGTH_SHORT).show());
//
//                    btsocket.close();
//                } catch (IOException closeException) {
//                }

                return;
            }

            handler.post(() -> {
                Toast.makeText(getApplicationContext(), "Dispositivo conectado", Toast.LENGTH_SHORT).show();

                if (sharedPreferences.getBoolean("mostrarinicio", true)) {
                    Intent intent = new Intent(getApplicationContext(), MainActivity.class);
                    intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                    intent.addFlags(Intent.FLAG_ACTIVITY_NO_ANIMATION);
                    startActivity(intent);
                    editor.putBoolean("mostrarinicio", false);
                    editor.apply();
                }
            });
            String BLUETOOTH_ADDRESS = "00:18:E4:34:C5:45";
            BluetoothDevice device = btadapter.getRemoteDevice(BLUETOOTH_ADDRESS);
            Method m = null;
            try {
                m = device.getClass().getMethod("isConnected", (Class[]) null);
            } catch (NoSuchMethodException e) {
                e.printStackTrace();
            }
            boolean boo = false;
            try {
                boo = (boolean) m.invoke(device, (Object[]) null);
            } catch (IllegalAccessException e) {
                e.printStackTrace();
            } catch (InvocationTargetException e) {
                e.printStackTrace();
            }
            if(boo){
                new Thread(new recibir()).start();
            }

        }


    }


    class recibir implements Runnable {
        int sinqrs, lectura, datoder, dato, r, i, qrsant, qrsnuevo, qrssintant, qrssintnuevo, datoizq = 0, c1 = 0, c2 = 0, c3 = 0, cpr = 0, numlectura = 0;
        boolean buscarpico = false, buscarqrs = false, pr = false;
        double sum, datomilivoltios, datofiltrado, umbral, derivada, max, prerr, postrr, avgrr, maxderivada = 0;

        ArrayList<Double> ventana1 = new ArrayList<>();
        ArrayList<Double> ventana2 = new ArrayList<>();
        ArrayList<Double> se単al = new ArrayList<>(Collections.nCopies(71,0d));
        ArrayList<Double> mf1 = new ArrayList<>(Collections.nCopies(215,0d));
        ArrayList<Double> se単alf1 = new ArrayList<>(Collections.nCopies(5,0d));
        ArrayList<Double> se単allatido = new ArrayList<>();
        Double[] se単allatido2 = new Double[181];
//        int lectura, numlectura = 0;
//        double datomilivoltios, datofiltrado;
//
//        ArrayList<Double> ventana1 = new ArrayList<>();
//        ArrayList<Double> ventana2 = new ArrayList<>();
//        ArrayList<Double> se単al = new ArrayList<>(Collections.nCopies(71,0d));
//        ArrayList<Double> mf1 = new ArrayList<>(Collections.nCopies(215,0d));
//        ArrayList<Double> se単alf1 = new ArrayList<>(Collections.nCopies(5,0d));
//        ArrayList<Double> se単allatido = new ArrayList<>();
//        Double[] se単allatido2 = new Double[181];
//        List<Integer> result;

        ExecutorService executorService = Executors.newSingleThreadExecutor();

        public recibir() {
            try {
                instream = btsocket.getInputStream();
            } catch (IOException e) {
                instream = null;
            }
        }

        public void run() {
            while (servicioactivo) {
//                try {
//
//                    lectura = instream.read();
//
//                    datomilivoltios = (lectura * (5.0 / 1024) - 1.5625) / 1.1;
//
//
//                    if (numlectura < 3) {
//                        numlectura++;
//                        ventana1.add(datomilivoltios);
//                        mf1.add(datomilivoltios);
//                    } else {
//                        numlectura = 0;
//                        ventana2.addAll(mf1);
//                        try {
//                            // Set the command to launch Python and execute the script
//                            //TODO script
//                            String listString = null;
//                            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {
//                                listString = mf1.stream().map(Object::toString)
//                                        .collect(Collectors.joining(", "));
//                            }
//                            String scriptPath = "preprocess.py";
//                            String[] command = new String[]{"python", scriptPath, listString};
//
//                            // Create a ProcessBuilder object and set the command
//                            ProcessBuilder pb = new ProcessBuilder(command);
//
//                            // Start the process
//                            Process process = pb.start();
//
//                            // Read the output from the process
//                            BufferedReader reader = new BufferedReader(new InputStreamReader(process.getInputStream()));
//                            String output = reader.readLine();
//
//                            // Convert the output to a list of integers
//                            output = output.replace('[', ' ');
//                            output = output.replace(']', ' ');
//                            result = null;
//                            if (android.os.Build.VERSION.SDK_INT >= android.os.Build.VERSION_CODES.N) {
//                                result = Arrays.stream(output.split(","))
//                                        .map(String::trim)
//                                        .map(Integer::parseInt)
//                                        .collect(Collectors.toList());
//                            }
//                            Intent intent2 = new Intent("info");
//                            intent2.putIntegerArrayListExtra("datofiltrado", (ArrayList<Integer>) result);
//                            getApplicationContext().sendBroadcast(intent2);
//
//                            // Wait for the process to finish
//                            int exitCode = process.waitFor();
//                        } catch (IOException | InterruptedException e) {
//                            e.printStackTrace();
//                        }
//                    }
//                }

                try {
                    lectura = instream.read();

                    datomilivoltios = (lectura * (5.0 / 1024) - 1.5625) / 1.1;

                    numlectura++;
                    c3--;

                    se単al.remove(0);
                    se単al.add(datomilivoltios);

                    if (numlectura > 35) {
                        ventana1.clear();
                        ventana1.addAll(se単al);
                        Collections.sort(ventana1);

                        mf1.remove(0);
                        mf1.add(ventana1.get(35));
                    }

                    if (numlectura > 142) {
                        ventana2.clear();
                        ventana2.addAll(mf1);
                        Collections.sort(ventana2);

                        se単alf1.remove(0);
                        se単alf1.add(datomilivoltios - (ventana2.get(107)));
                    }

                    if (numlectura > 144) {
                        sum = 0;

                        for (i = 0; i < 5; i++) {
                            sum = sum + se単alf1.get(i);
                        }

                        datofiltrado = sum / 5;

                        se単alf2.add(datofiltrado);

                        Intent intent2 = new Intent("info");
                        intent2.putExtra("datofiltrado", datofiltrado);
                        getApplicationContext().sendBroadcast(intent2);
                    }
                    Intent intent2 = new Intent("info");
                    intent2.putExtra("datofiltrado", datofiltrado);
                    getApplicationContext().sendBroadcast(intent2);

                    if (c3 == 0) {
                        se単allatido.clear();
                        se単allatido.addAll(se単alf2.subList(se単alf2.size() - 182, se単alf2.size() - 1));
                    }
                }


                catch (IOException e) {
                    handler.post(new Runnable() {
                        public void run() {
                            Toast.makeText(getApplicationContext(), "Se perdi坦 la conexi坦n", Toast.LENGTH_SHORT).show();
                        }
                    });
                }
            }
        }
    }

    public class analizar implements Runnable {
        Double[] se単allatido, temp, se単alstd, se単alpca, tempstd;

        Double[] entradacapa1 = new Double[tama単oentrada + 1];
        Double[] salidacapa1 = new Double[tama単ocapaoculta];
        Double[] entradacapa2 = new Double[tama単ocapaoculta + 1];
        Double[] salidacapa2 = new Double[tama単osalida];

        int i, numclase;
        double max;


        public analizar(Double[] se単allatido, double prerr, double postrr, double avgrr) {
            this.se単allatido = se単allatido;
            this.temp = new Double[] {prerr, postrr, avgrr};
        }

        @Override
        public void run() {

            editor.apply();

        }
    }


    private static class paramalerta {
        long hora;
        String tipo;

        paramalerta (long hora, String tipo) {
            this.hora = hora;
            this.tipo = tipo;
        }
    }

    private class alerta extends AsyncTask<paramalerta, Void, Void> {
        @Override
        protected Void doInBackground(paramalerta... params) {
            long hora = params[0].hora;
            Calendar calendar = Calendar.getInstance();
            calendar.setTimeInMillis(hora);
            String tipo = params[0].tipo;
            String nombre = sharedPreferences.getString("nombre", "0");
            String numero = sharedPreferences.getString("numemergencia", "0");
            String mail = sharedPreferences.getString("mailmedico", "0");

            if (nombre.equals(""))
                nombre = "su familiar";

            if (!numero.equals("")) {
                SmsManager manager = SmsManager.getDefault();

                if (ContextCompat.checkSelfPermission(getApplicationContext(), Manifest.permission.SEND_SMS) == PackageManager.PERMISSION_GRANTED) {
                    String mensaje = "Se detect坦 una situaci坦n de emergencia en el electrocardiograma de " + nombre + ". Contacte a un n炭mero de emergencia de inmediato";
                    ArrayList<String> partes = manager.divideMessage(mensaje);
                    manager.sendMultipartTextMessage(numero, null, partes, null, null);
                }
            }

            Intent intent = new Intent(getApplicationContext(), MainActivity.class);
            intent.putExtra("alerta", true);
            PendingIntent pendingIntent = PendingIntent.getActivity(getApplicationContext(), 0, intent, 0);

            NotificationCompat.Builder notificationBuilder = new NotificationCompat.Builder(getApplicationContext())
                    .setContentTitle(tipo)
                    .setSmallIcon(R.drawable.ic_stat_name)
                    .setSound(RingtoneManager.getDefaultUri(RingtoneManager.TYPE_NOTIFICATION))
                    .setColor(ContextCompat.getColor(getApplicationContext(), R.color.colorPrimary))
                    .setContentIntent(pendingIntent);

            notificationBuilder.setContentText("Se detect坦 un episodio y se contact坦 al n炭mero de emergencia.");

            Notification notificacion = notificationBuilder.build();
            NotificationManager notificationManager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
            notificationManager.notify(alertas + 2, notificacion);

            ArrayList<String> attachments = new ArrayList<>();
            attachments.add("/data/user/0/com.example.anto.holterbluetoothinteligente/files/" + "informe" + String.format("%d%02d", calendar.get(Calendar.HOUR_OF_DAY), calendar.get(Calendar.MINUTE)) + ".json");

            if (!mail.equals("")) {
                BackgroundMail.newBuilder(getApplicationContext())
                        .withUsername("holterbluetoothinteligente@gmail.com")
                        .withPassword("holter123")
                        .withMailto(mail)
                        .withSubject("Informe Holter Bluetooth Inteligente")
                        .withBody("Se produjo un evento de: " + tipo + " a las " + String.format("%d:%02d", calendar.get(Calendar.HOUR_OF_DAY), calendar.get(Calendar.MINUTE)) + ". Se adjunta la se単al de ECG registrada en la 炭ltima hora, con la correspondiente clasificaci坦n de cada latido.")
                        .withAttachments(attachments)
                        .send();
            }

            editor.putLong("alertahora" + String.valueOf(alertas), hora);
            editor.putString("alertatipo" + String.valueOf(alertas), tipo);

            alertas++;
            editor.putInt("alertas", alertas);


            return null;
        }
    }

    private static class paramguardar {
        long horaguardar;
        String eventoguardar;
        ArrayList<Double> se単alguardar;

        paramguardar(long horaguardar, String eventoguardar, ArrayList<Double> se単alguardar) {
            this.horaguardar = horaguardar;
            this.eventoguardar = eventoguardar;
            this.se単alguardar = se単alguardar;
        }
    }

    private class guardar extends AsyncTask<paramguardar,Void,Void> {
        @Override
        protected Void doInBackground(paramguardar... params) {
            JSONObject obj = new JSONObject();
            JSONArray senaljson = new JSONArray();

            long hora = params[0].horaguardar;
            String evento = params[0].eventoguardar;
            Calendar calendar = Calendar.getInstance();
            calendar.setTimeInMillis(hora);
            String archivo = "informe" + String.format("%d%02d", calendar.get(Calendar.HOUR_OF_DAY), calendar.get(Calendar.MINUTE)) + ".json";


            try {
                obj.put("hora", calendar.get(Calendar.HOUR_OF_DAY));
                obj.put("minutos", calendar.get(Calendar.MINUTE));
                obj.put("evento", evento);
                obj.put("senal", senaljson);
            }
            catch(JSONException e) {
            }

            try {
                FileWriter file = new FileWriter(new File(getApplicationContext().getFilesDir(), archivo));
                file.write(obj.toString());
                file.flush();
                file.close();
            }
            catch (IOException e) {
            }

            return null;
        }
    }

    public static void sendDataToPairedDevice(String message, BluetoothDevice device, Context context) {
        byte[] toSend = message.getBytes(Charset.defaultCharset());
        try {
            UUID applicationUUID = UUID.fromString("00001101-0000-1000-8000-00805F9B34FB");
            if (ActivityCompat.checkSelfPermission(context, Manifest.permission.BLUETOOTH_CONNECT) != PackageManager.PERMISSION_GRANTED) {
                // TODO: Consider calling
                //    ActivityCompat#requestPermissions
                // here to request the missing permissions, and then overriding
                //   public void onRequestPermissionsResult(int requestCode, String[] permissions,
                //                                          int[] grantResults)
                // to handle the case where the user grants the permission. See the documentation
                // for ActivityCompat#requestPermissions for more details.
                return;
            }
            Toast.makeText(context, "Se manda msj", Toast.LENGTH_SHORT).show();

            OutputStream mmOutStream = btsocket.getOutputStream();
            mmOutStream.write(toSend);
            // Your Data is sent to  BT connected paired device ENJOY.
        } catch (Exception e) {
            Toast.makeText(context, "No se pudo iniciar", Toast.LENGTH_SHORT).show();
        }
    }
}